{% extends 'base_template.html.twig' %}

{% block title %}
	VHS | Inscription
{% endblock %}

{% block content %}
	<div class="container py-5">
		<div class="text-center">
			<img src="{{ constant('WEBSITE_LOGO') }}" height="95" width="155" alt="Logo" class="mb-3">
		</div>
		<form id="registrationForm" action="index.php?controller=utilisateur&methode=checkInfoInscription" method="POST" class="col-12 col-md-8 col-lg-6 mx-auto bg-dark text-white p-4 rounded" novalidate>
			<div class="text-center mb-4">

				<h2>Cr√©er un Compte</h2>
			</div>

			{% if messagederreur is defined %}
				<div class="alert alert-danger bg-tercary mx-5" role="alert">
					Erreur :
					{{ messagederreur }}
				</div>
			{% endif %}

			<div class="row">
				<div class="col-md-6 mb-3">
					<label for="idantifiant" class="form-label">Identifiant</label>
					<input type="text" class="form-control" id="idantifiant" name="idantifiant" minlength="3" maxlength="20" required>
					<div class="invalid-feedback">
						Identifiant doit faire entre 3 et 20 caract√®res
					</div>
				</div>
				<div class="col-md-6 mb-3">
					<label for="pseudo" class="form-label">Pseudo</label>
					<input type="text" class="form-control" id="pseudo" name="pseudo" minlength="3" maxlength="50" required>
					<div class="invalid-feedback">
						Pseudo doit faire entre 3 et 50 caract√®res
					</div>
				</div>
			</div>

			<div class="mb-3">
				<label for="mail" class="form-label">Email</label>
				<input type="email" class="form-control" id="mail" name="mail" pattern="[^@\s]+@[^@\s]+\.[^@\s]+" required>
				<div class="invalid-feedback">
					Veuillez entrer une adresse email valide
				</div>
			</div>

			<div class="mb-3">
				<label for="date" class="form-label">Date de naissance</label>
				<input type="date" class="form-control" id="date" name="date" required>
				<div class="invalid-feedback">
					Veuillez s√©lectionner votre date de naissance
				</div>
			</div>

			<div class="mb-3">
				<label for="mdp" class="form-label">Mot de passe</label>
				<div class="input-group">
					<input type="password" class="form-control" id="mdp" name="mdp" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$" required>
					<button class="btn btn-outline-secondary" type="button" id="togglePassword">üëÅÔ∏è</button>
				</div>
				<div class="invalid-feedback text-white">
					Le mot de passe doit contenir au moins 8 caract√®res, une majuscule, une minuscule, un chiffre et un caract√®re sp√©cial.
				</div>
			</div>

			<div class="mb-3">
				<label for="vmdp" class="form-label">Confirmation Mot de passe</label>
				<input type="password" class="form-control" id="vmdp" name="vmdp" required>
				<div class="invalid-feedback">
					Les mots de passe ne correspondent pas
				</div>
			</div>

			<div class="mb-3 form-check">
				<input type="checkbox" class="form-check-input" id="conditions" name="conditions" required>
				<label class="form-check-label" for="conditions">
					J'accepte les
					<a href="#" data-bs-toggle="modal" data-bs-target="#afficherconditions">
						conditions d'utilisation
					</a>
				</label>
			</div>

			<button type="submit" class="btn btn-myprimary w-100">Cr√©er le compte</button>

			<div class="text-center mt-3">
				<a href="index.php?controller=utilisateur&methode=connexion" class="text-white">
					D√©j√† un compte ? Se connecter
				</a>
			</div>
		</form>
	</div>

	{% include 'modals.html.twig' with { 'last_update_date': '08/01/2025' } %}

	<script>
		document.addEventListener('DOMContentLoaded', function () {
const form = document.getElementById('registrationForm');
const passwordInput = document.getElementById('mdp');
const confirmPasswordInput = document.getElementById('vmdp');
const togglePasswordBtn = document.getElementById('togglePassword');

// Password toggle visibility
togglePasswordBtn.addEventListener('click', function () {
const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
passwordInput.setAttribute('type', type);
confirmPasswordInput.setAttribute('type', type);
});

// Form validation
form.addEventListener('submit', function (event) {
if (! form.checkValidity()) {
event.preventDefault();
event.stopPropagation();
$('.loader-container').hide();
}
form.classList.add('was-validated');
}, false);

// Password match validation
confirmPasswordInput.addEventListener('input', function () {
if (passwordInput.value !== confirmPasswordInput.value) {
confirmPasswordInput.setCustomValidity('Les mots de passe ne correspondent pas');
$('.loader-container').hide();
} else {
confirmPasswordInput.setCustomValidity('');
}
});
});
	</script>
{% endblock %}
